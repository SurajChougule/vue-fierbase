{"remainingRequest":"/home/suraj/suraj/practice/app-vui-fire/vui-fire/node_modules/babel-loader/lib/index.js!/home/suraj/suraj/practice/app-vui-fire/vui-fire/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/suraj/suraj/practice/app-vui-fire/vui-fire/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/suraj/suraj/practice/app-vui-fire/vui-fire/src/components/HelloWorld.vue","mtime":1534074987757},{"path":"/home/suraj/suraj/practice/app-vui-fire/vui-fire/node_modules/cache-loader/dist/cjs.js","mtime":1533826430287},{"path":"/home/suraj/suraj/practice/app-vui-fire/vui-fire/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/suraj/suraj/practice/app-vui-fire/vui-fire/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'HelloWorld',\n  data: function data() {\n    return {\n      title: '',\n      content: ''\n    };\n  },\n  components: {\n    Index: Index,\n    CreateNoteForm: CreateNoteForm\n  },\n  methods: {\n    createNote: function createNote() {\n      var _this = this;\n\n      if (this.title.trim() || this.content.trim()) {\n        var database = firebase.database();\n        var notes = {\n          title: this.title,\n          content: this.content\n        };\n        database.ref('notes').push(notes, function (err) {\n          if (err) {\n            throw err;\n          }\n\n          _this.title = '';\n          _this.content = '';\n        });\n      }\n    },\n    writeNewPost: function writeNewPost(title, content) {\n      var postData = {\n        title: title,\n        content: content\n      }; // Get a key for a new Post.\n\n      var newPostKey = firebase.database().ref().child('notes').push().key; // Write the new post's data simultaneously in the posts list and the user's post list.\n\n      var updates = {};\n      updates['/notes/' + newPostKey] = postData;\n      return firebase.database().ref().update(updates);\n    }\n  }\n};",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,eAAA;AACA,QAAA,YADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,aAAA,EADA;AAEA,eAAA;AAFA,KAAA;AAIA,GAPA;AAQA,cAAA;AACA,gBADA;AAEA;AAFA,GARA;AAYA,WAAA;AACA,cADA,wBACA;AAAA;;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,MAAA,KAAA,OAAA,CAAA,IAAA,EAAA,EAAA;AACA,YAAA,WAAA,SAAA,QAAA,EAAA;AACA,YAAA,QAAA;AACA,iBAAA,KAAA,KADA;AAEA,mBAAA,KAAA;AAFA,SAAA;AAIA,iBAAA,GAAA,CAAA,OAAA,EAAA,IAAA,CAAA,KAAA,EAAA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,EAAA;AACA,kBAAA,GAAA;AACA;;AACA,gBAAA,KAAA,GAAA,EAAA;AACA,gBAAA,OAAA,GAAA,EAAA;AACA,SANA;AAOA;AACA,KAhBA;AAiBA,gBAjBA,wBAiBA,KAjBA,EAiBA,OAjBA,EAiBA;AACA,UAAA,WAAA;AACA,eAAA,KADA;AAEA,iBAAA;AAFA,OAAA,CADA,CAKA;;AACA,UAAA,aAAA,SAAA,QAAA,GAAA,GAAA,GAAA,KAAA,CAAA,OAAA,EAAA,IAAA,GAAA,GAAA,CANA,CAQA;;AACA,UAAA,UAAA,EAAA;AACA,cAAA,YAAA,UAAA,IAAA,QAAA;AAEA,aAAA,SAAA,QAAA,GAAA,GAAA,GAAA,MAAA,CAAA,OAAA,CAAA;AACA;AA9BA;AAZA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-slide-y-transition mode=\"out-in\">\n      <v-layout column align-center>\n        <img src=\"@/assets/logo.png\" alt=\"Vuetify.js\" class=\"mb-5\">\n        <blockquote>\n          &#8220;First, solve the problem. Then, write the code.&#8221;\n          <footer>\n            <small>\n              <em>&mdash;John Johnson</em>\n            </small>\n          </footer>\n        </blockquote>\n       <v-flex xs12 sm12 md6>\n        <v-card>\n        <form class=\"create-note\" v-on:submit.prevent=\"createNote()\">\n          <input name=\"title\" v-model=\"title\" placeholder=\"Title\"/>\n          <textarea name=\"content\" v-model=\"content\" placeholder=\"Text goes here...\" rows=\"3\">\n          </textarea>\n        </form>\n            <v-btn\n              absolute\n              dark\n              fab\n              bottom\n              right\n              color=\"red\"\n            >\n              <v-icon>add</v-icon>\n            </v-btn>\n        </v-card>\n      </v-flex>\n      </v-layout>\n    </v-slide-y-transition>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n    data () {\n      return {\n        title: '',\n        content: ''\n      }\n    },\n    components: {\n    Index,\n    CreateNoteForm\n  },\n    methods: {\n      createNote () {\n        if (this.title.trim() || this.content.trim()) {\n          var database = firebase.database();\n          var notes = {\n            title: this.title,\n            content: this.content\n          };\n          database.ref('notes').push(notes, (err) => {\n            if (err) {\n              throw err\n            }\n            this.title = ''\n            this.content = ''\n          })\n        }\n      },\n      writeNewPost(title, content) {\n      var postData = {\n        title: title,\n        content: content,\n      };\n      // Get a key for a new Post.\n      var newPostKey = firebase.database().ref().child('notes').push().key;\n\n      // Write the new post's data simultaneously in the posts list and the user's post list.\n      var updates = {};\n      updates['/notes/' + newPostKey] = postData;\n\n      return firebase.database().ref().update(updates);\n    }\n    }\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n form.create-note{\n    position: relative;\n    width: 480px;\n    margin: 15px auto;\n    background: #fff;\n    padding: 15px;\n    border-radius: 2px;\n    box-shadow: 0 1px 5px #ccc;\n  }\n  form.create-note input, form.create-note textarea{\n    width: 100%;\n    border: none;\n    padding: 4px;\n    outline: none;\n    font-size: 1.2em;\n  }\n  form.create-note button{\n    position: absolute;\n    right: 18px;\n    bottom: -18px;\n    background: #41b883;\n    color: #fff;\n    border: none;\n    border-radius: 50%;\n    width: 36px;\n    height: 36px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.3);\n    cursor: pointer;\n    outline: none;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}